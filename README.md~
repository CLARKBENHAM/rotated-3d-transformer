Am trying to create new ML architecture using PyTorch for predicting weather patterns (and thus hopefully electricity prices).
As 2d LSTMs work for generating pixels, would have to have a 'rotated' 2d LStm that when given data from NOAA stations in an area can predict values at t+1, (Hopefully correlated to $).

Todo:
get NOAA station data.
Preprocessing:
	segment station data by geographic area/match to price data
		or are there national trends that need to be picked up?
	upload to collab
	have dropout encoding for training? Would learn weights for predicting left out station data?
	     (But want to predict value at t+1, not geographically adjacent)
Figure out archetecture
       ?Have some way to 
       ?Just use 2d/8 surrounding cells, as what's done for predicting the next pixel. network learn this automatically from how much weight to place on related cells?

get electricity price data
Add CNN on stations to price data and see what happens.